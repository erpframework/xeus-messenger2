<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:a="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
  xmlns:prop="clr-namespace:xeus2.Properties"
  xmlns:xeus2_xeus_Control="clr-namespace:xeus2.xeus.UI.xeus.UI.Controls"
  xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
  xmlns:Core="clr-namespace:xeus2.xeus.Core;assembly=" 	
  >

    <DrawingBrush x:Key="contact_back_design" PresentationOptions:Freeze="True">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Geometry="F1 M 5.70833,6.25L 60.125,6.25L 60.125,58.6667L 5.70833,58.6667L 5.70833,6.25 Z ">
                        <GeometryDrawing.Brush>
                            <LinearGradientBrush StartPoint="0.5,1.01908" EndPoint="0.5,-0.0190779">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="#FF515151" Offset="0"/>
                                    <GradientStop Color="#FF141414" Offset="1"/>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </GeometryDrawing.Brush>
                    </GeometryDrawing>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    
    <DataTemplate x:Key="GroupTemplate">
        <Border Background="{DynamicResource back_list_design}" BorderBrush="{DynamicResource DefaultBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3">
            <Grid>
                <TextBlock Text="{Binding Path=Name}"/>
                <!--
                <Rectangle Width="24" Height="24" HorizontalAlignment="Left" VerticalAlignment="Center" Fill="{DynamicResource group_design}"/>
                <StackPanel Margin="32,0,0,0">
                    <TextBlock Text="{Binding Path=Name}"/>
                    <TextBlock Text="{Binding Path=Description}"/>
                </StackPanel>
                -->
            </Grid>
        </Border>
    </DataTemplate>

    <DrawingBrush x:Key="filter_design"  PresentationOptions:Freeze="True">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Geometry="F1 M -43.9938,-44.9461L -47.9305,-45.6548C -48.9581,-45.8398 -49.8025,-46.4491 -50.3157,-47.2696L -45.0173,-46.3158C -43.6585,-46.0711 -42.3586,-46.9744 -42.1139,-48.3333C -41.8693,-49.6921 -42.7726,-50.992 -44.1314,-51.2367L -49.2131,-52.1515C -48.4853,-52.6161 -47.5874,-52.8185 -46.6706,-52.6534L -42.7339,-51.9447C -40.8013,-51.5968 -39.5166,-49.748 -39.8645,-47.8154C -40.2125,-45.8828 -42.0612,-44.5982 -43.9938,-44.9461 Z ">
                        <GeometryDrawing.Pen>
                            <Pen LineJoin="Round" Brush="#FF3C3C3C"/>
                        </GeometryDrawing.Pen>
                        <GeometryDrawing.Brush>
                            <LinearGradientBrush StartPoint="0.0374675,0.396886" EndPoint="1.02041,0.396886">
                                <LinearGradientBrush.RelativeTransform>
                                    <TransformGroup>
                                        <SkewTransform CenterX="0.0374675" CenterY="0.396886" AngleX="5.36043" AngleY="0"/>
                                        <RotateTransform CenterX="0.0374675" CenterY="0.396886" Angle="13.2174"/>
                                    </TransformGroup>
                                </LinearGradientBrush.RelativeTransform>
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="#FF0E1417" Offset="0"/>
                                    <GradientStop Color="#FF617E8D" Offset="1"/>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </GeometryDrawing.Brush>
                    </GeometryDrawing>
                    <GeometryDrawing Geometry="F1 M -60.9783,-53.4403L -52.9991,-45.2597L -52.3741,-35.6764L -49.7325,-35.6764L -49.1658,-45.2181L -40.9783,-53.4403L -60.9783,-53.4403 Z ">
                        <GeometryDrawing.Pen>
                            <Pen LineJoin="Round" Brush="#FF3C3C3C"/>
                        </GeometryDrawing.Pen>
                        <GeometryDrawing.Brush>
                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="#FFE8FAFF" Offset="0"/>
                                    <GradientStop Color="#FF2B4352" Offset="1"/>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </GeometryDrawing.Brush>
                    </GeometryDrawing>
                    <GeometryDrawing Brush="#34000000" Geometry="F1 M -41.6296,-53.4403L -46.7802,-53.4403L -50.739,-45.9355L -51.2513,-36.1764L -50.1168,-36.1764L -49.5674,-45.4495L -41.6296,-53.4403 Z "/>
                    <GeometryDrawing Geometry="F1 M -50.9783,-55.107C -45.4555,-55.107 -40.9783,-54.3608 -40.9783,-53.4403C -40.9783,-52.5198 -45.4555,-51.7736 -50.9783,-51.7736C -56.5011,-51.7736 -60.9783,-52.5198 -60.9783,-53.4403C -60.9783,-54.3608 -56.5011,-55.107 -50.9783,-55.107 Z ">
                        <GeometryDrawing.Pen>
                            <Pen LineJoin="Round" Brush="#FF3C3C3C"/>
                        </GeometryDrawing.Pen>
                        <GeometryDrawing.Brush>
                            <LinearGradientBrush StartPoint="0.178606,0.190637" EndPoint="1.07079,0.190637">
                                <LinearGradientBrush.RelativeTransform>
                                    <TransformGroup>
                                        <SkewTransform CenterX="0.178606" CenterY="0.190637" AngleX="-11.9658" AngleY="0"/>
                                        <RotateTransform CenterX="0.178606" CenterY="0.190637" Angle="43.9074"/>
                                    </TransformGroup>
                                </LinearGradientBrush.RelativeTransform>
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="#FF0E1417" Offset="0"/>
                                    <GradientStop Color="#FF617E8D" Offset="1"/>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </GeometryDrawing.Brush>
                    </GeometryDrawing>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    
    <!-- Resource dictionary entries should be defined here. -->
    <SolidColorBrush x:Key="roster_name_text" Color="#FFEEEEEE" PresentationOptions:Freeze="True" />
    <SolidColorBrush x:Key="roster_status_text" Color="#FFBBBBBB" PresentationOptions:Freeze="True" />
    <SolidColorBrush x:Key="roster_image_border" Color="#FF444444" PresentationOptions:Freeze="True" />

    <DataTemplate DataType="{x:Type Core:MessageBase}" x:Key="MessageOldness">
        <Grid ToolTip="Last Message">
            <Rectangle Width="16" Height="16" Fill="{DynamicResource time_oldest_design}"
                   x:Name="_timeIcon" DockPanel.Dock="Right" HorizontalAlignment="Left" VerticalAlignment="Top"/>
            <TextBlock Text="{Binding Path=RelativeTime}"
					ToolTip="{Binding Path=DateTime}" Foreground="{DynamicResource DefaultTextBrush2}" HorizontalAlignment="Left"
                   Margin="20,0,0,0" VerticalAlignment="Top" FontSize="11" TextWrapping="Wrap"/>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=MessageOldness}">
                <DataTrigger.Value>
                    <Core:MessageOldness>Recent</Core:MessageOldness>
                </DataTrigger.Value>
                <Setter  TargetName="_timeIcon" Property="Rectangle.Fill" Value="{DynamicResource time_now_design}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=MessageOldness}">
                <DataTrigger.Value>
                    <Core:MessageOldness>Older</Core:MessageOldness>
                </DataTrigger.Value>
                <Setter  TargetName="_timeIcon" Property="Rectangle.Fill" Value="{DynamicResource time_older_design}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=MessageOldness}">
                <DataTrigger.Value>
                    <Core:MessageOldness>Old</Core:MessageOldness>
                </DataTrigger.Value>
                <Setter  TargetName="_timeIcon" Property="Rectangle.Fill" Value="{DynamicResource time_old_design}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=RelativeTime}" Value="{x:Null}">
                <Setter  TargetName="_timeIcon" Property="Visibility" Value="Hidden"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    
    <DrawingBrush x:Key="right_shadow" PresentationOptions:Freeze="True">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Geometry="F1 M 179.305,90L 158.028,90L 158.028,15.3333L 179.305,15.3333L 179.305,90 Z ">
                        <GeometryDrawing.Brush>
                            <LinearGradientBrush StartPoint="1,0.5" EndPoint="0,0.5">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="#FF000000" Offset="0"/>
                                    <GradientStop Color="#00999999" Offset="1"/>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </GeometryDrawing.Brush>
                    </GeometryDrawing>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="contact_back_big_glow_design" PresentationOptions:Freeze="True">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="#1AFFFFFF" Geometry="F1 M 136.556,19.1754L 212.722,19.1754L 212.722,34.8421C 200.056,35.8421 187.389,36.8421 174.694,36.8421C 162,36.8421 149.278,35.8421 136.556,34.8421L 136.556,19.1754 Z "/>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>


    <ItemsPanelTemplate x:Key="ItemsPanelTemplateRoster">
        <!--<VirtualizingStackPanel IsItemsHost="True"/>-->
        <WrapPanel IsItemsHost="True" />
    </ItemsPanelTemplate>

    <DataTemplate x:Key="MetaContactSmall">
        <Grid>
            <Grid.ToolTip>
                <ContentPresenter Content="{Binding}" ContentTemplate="{DynamicResource ContactToolTip}"/>
            </Grid.ToolTip>
            
            <Grid Margin="1,1,1,1" x:Name="_grid" ContextMenu="{DynamicResource ContactMenu}"
                  MaxWidth="{Binding Path=UI_Item_Small_MaxWidth, Source={x:Static prop:Settings.Default}}"
                  VerticalAlignment="Center">
                <Grid VerticalAlignment="Bottom" x:Name="_resource" Margin="3,-1,5,0" HorizontalAlignment="Left">
                    <Border BorderThickness="1,1,1,1" CornerRadius="2,2,2,2" Margin="0,0,0,2"
                        Background="#FFe5e5e5" BorderBrush="{DynamicResource roster_image_border}">
                        <TextBlock Margin="5,0,5,0" VerticalAlignment="Center" Foreground="#FF000000"
                               Text="{Binding Path=Resource}" FontSize="10" TextTrimming="CharacterEllipsis" HorizontalAlignment="Left">
                        </TextBlock>
                    </Border>
                </Grid>
                <Grid Margin="0,0,0,15" x:Name="_item" >
                    <Rectangle Width="16" Height="16" HorizontalAlignment="Left" VerticalAlignment="Center"
                                x:Name="_show" Panel.ZIndex="1" Margin="7,0,0,0"/>
                    <!--
                    <Rectangle Margin="1,1,1,0"
                             Fill="{DynamicResource contact_back_big_glow_design}"
                             VerticalAlignment="Top" Height="20" Panel.ZIndex="1" SnapsToDevicePixels="True"/>
                     -->
                    <a:SystemDropShadowChrome Color="#3000" Margin="-4,-4,1,1"/>
                    <Border Padding="0,0,2,0"
                            CornerRadius="2" SnapsToDevicePixels="True" x:Name="_parent"
                            Background="{StaticResource contact_back_design}">
                        <Grid>
                            <Image Source="{Binding Path=Image}" x:Name="_image" 
                                      HorizontalAlignment="Left"
                                      Height="26" Margin="2,0,0,0"
                                      Stretch="Uniform" IsEnabled="False"/>
                            <StackPanel x:Name="_container" Margin="28,0,0,0">
                                <TextBlock Margin="3,1,3,0" Text="{Binding Path=DisplayName}"
                                       Foreground="{StaticResource roster_name_text}" FontSize="11"
                                       TextAlignment="Left" TextTrimming="CharacterEllipsis"/>
                                <TextBlock Text="{Binding Path=XStatusText}" Foreground="{StaticResource roster_status_text}"
                                       Margin="3,-3,3,2" FontSize="10" TextAlignment="Left" TextTrimming="CharacterEllipsis"/>
                            </StackPanel>
                        </Grid>
                    </Border>
                </Grid>
            </Grid>
            <Border x:Name="_uptime" BorderThickness="1,1,1,1" CornerRadius="2,2,2,2"
                        Background="#FFe5e5e5" BorderBrush="{DynamicResource roster_image_border}"
                        HorizontalAlignment="Center" VerticalAlignment="Center" Margin="3,0,0,3"
                        Padding="2,0,0,2">
                <TextBlock Text="{Binding Path=LastOnlineTime}" Foreground="#FF000000"
                           FontSize="9"/>
            </Border>
        </Grid>
        
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsAvailable}" Value="False">
                <Setter Property="Opacity" TargetName="_grid" Value="0.35"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=IsAvailable}" Value="True">
                <Setter Property="Visibility" TargetName="_uptime" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=LastOnlineTime}" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="_uptime" Value="Collapsed"/>
            </DataTrigger>
            
            <DataTrigger Binding="{Binding Path=Resource}" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="_resource" Value="Collapsed"/>
                <Setter Property="Margin" TargetName="_item" Value="0,0,0,0"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=Show}" Value="dnd">
                <Setter Property="Fill" TargetName="_show" Value="{DynamicResource dnd_design}"/>
                <Setter Property="Visibility" TargetName="_image" Value="Hidden"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Show}" Value="away">
                <Setter Property="Fill" TargetName="_show" Value="{DynamicResource away_design}"/>
                <Setter Property="Visibility" TargetName="_image" Value="Hidden"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Show}" Value="xa">
                <Setter Property="Fill" TargetName="_show" Value="{DynamicResource xaway_design}"/>
                <Setter Property="Visibility" TargetName="_image" Value="Hidden"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Show}" Value="chat">
                <Setter Property="Fill" TargetName="_show" Value="{DynamicResource chat_design}"/>
                <Setter Property="Visibility" TargetName="_image" Value="Hidden"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="MetaContactMedium">
        <Grid Margin="3,3,3,3" x:Name="_grid" MaxWidth="160" MaxHeight="70" ContextMenu="{DynamicResource ContactMenu}">
            <Grid.ToolTip>
                <ContentPresenter Content="{Binding}" ContentTemplate="{DynamicResource ContactToolTip}"/>
            </Grid.ToolTip>
            <Grid>
                <Grid VerticalAlignment="Bottom" x:Name="_resource" Margin="3,-1,5,0" Visibility="Visible" HorizontalAlignment="Left">
                    <Border BorderThickness="1,1,1,1" CornerRadius="2,2,2,2" Margin="0,0,0,2"
                        Background="#FFe5e5e5" BorderBrush="{DynamicResource roster_image_border}">
                        <TextBlock Margin="5,0,5,0" VerticalAlignment="Center" Foreground="#FF000000"
                               Text="{Binding Path=Resource}" FontSize="10" TextTrimming="CharacterEllipsis" HorizontalAlignment="Left"/>
                    </Border>
                </Grid>
                <Grid Margin="0,0,0,15" x:Name="_item" >
                    <Rectangle Margin="1,1,1,0"
                 Fill="{DynamicResource contact_back_big_glow_design}"
                 VerticalAlignment="Top" Height="20" Panel.ZIndex="1" SnapsToDevicePixels="True"/>
                    <a:SystemDropShadowChrome Color="#3000" Margin="-4,-4,1,1"/>
                    <Border ClipToBounds="True" Padding="3,3,3,3"
                    BorderBrush="#FFAAAAAA" BorderThickness="1,1,1,1"
                    CornerRadius="3,3,3,3" SnapsToDevicePixels="True">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0.5,1.0" EndPoint="0.5,0.0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="#FF515151" Offset="0"/>
                                    <GradientStop Color="#FF141414" Offset="1"/>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Border.Background>
                        <Grid>
                            <StackPanel HorizontalAlignment="Left">
                                <Border Margin="1,4,1,-3" x:Name="_imageBorder" Width="32" Height="32">
                                    <Image Source="{Binding Path=Image}" x:Name="_image" 
                                       Width="32" Height="32" 
                                  ClipToBounds="True" Stretch="Uniform" IsEnabled="False">
                                    </Image>
                                </Border>
                                <Border Width="30" Height="15" Opacity="0.5" Margin="0,2,0,-3">
                                    <Border.OpacityMask>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop Offset="0" Color="Black"/>
                                                <GradientStop Offset=".6" Color="Transparent"/>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Border.OpacityMask>
                                    <Border.Background>
                                        <VisualBrush Visual="{Binding ElementName=_imageBorder}">
                                            <VisualBrush.Transform>
                                                <ScaleTransform ScaleX="1" ScaleY="-1" CenterX="16" CenterY="8" />
                                            </VisualBrush.Transform>
                                        </VisualBrush>
                                    </Border.Background>
                                </Border>
                            </StackPanel>
                            <StackPanel Margin="35,0,0,0">
                                <TextBlock Margin="3,0,3,0" Text="{Binding Path=DisplayName}" Foreground="{StaticResource roster_name_text}" FontSize="11"
                                       TextAlignment="Left" TextTrimming="CharacterEllipsis"/>
                                <Grid>
                                    <Rectangle Width="16" Height="16" HorizontalAlignment="Left" VerticalAlignment="Center"
                                    x:Name="_show" Panel.ZIndex="1" Margin="0,0,4,0"/>
                                    <TextBlock Text="{Binding Path=XStatusText}" x:Name="_statusText"
                                           Foreground="{StaticResource roster_status_text}"
                                           Margin="4,0,4,0" FontSize="10" TextAlignment="Left" TextWrapping="Wrap" MaxHeight="30" TextTrimming="CharacterEllipsis"/>
                                </Grid>
                            </StackPanel>
                        </Grid>
                    </Border>
                </Grid>
                <Border x:Name="_uptime" BorderThickness="1,1,1,1" CornerRadius="2,2,2,2"
                        Background="#FFe5e5e5" BorderBrush="{DynamicResource roster_image_border}"
                        HorizontalAlignment="Center" VerticalAlignment="Center" Margin="3,0,0,3"
                        Padding="2,0,0,2">
                    <TextBlock Text="{Binding Path=LastOnlineTime}" Foreground="#FF000000"
                           FontSize="9"/>
                </Border>
            </Grid>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsImageTransparent}" Value="False">
                <Setter Property="BorderThickness" TargetName="_imageBorder" Value="1,1,1,1"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsAvailable}" Value="False">
                <Setter Property="Opacity" TargetName="_grid" Value="0.35"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=IsAvailable}" Value="True">
                <Setter Property="Visibility" TargetName="_uptime" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=LastOnlineTime}" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="_uptime" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=Resource}" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="_resource" Value="Collapsed"/>
                <Setter Property="Margin" TargetName="_item" Value="0,0,0,0"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=Show}" Value="dnd">
                <Setter Property="Fill" TargetName="_show" Value="{DynamicResource dnd_design}"/>
                <Setter Property="Margin" TargetName="_statusText" Value="20,0,0,0"/>
                <Setter Property="Opacity" TargetName="_image" Value="0.4"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Show}" Value="away">
                <Setter Property="Fill" TargetName="_show" Value="{DynamicResource away_design}"/>
                <Setter Property="Margin" TargetName="_statusText" Value="20,0,0,0"/>
                <Setter Property="Opacity" TargetName="_image" Value="0.4"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Show}" Value="xa">
                <Setter Property="Fill" TargetName="_show" Value="{DynamicResource xaway_design}"/>
                <Setter Property="Margin" TargetName="_statusText" Value="20,0,0,0"/>
                <Setter Property="Opacity" TargetName="_image" Value="0.4"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Show}" Value="chat">
                <Setter Property="Fill" TargetName="_show" Value="{DynamicResource chat_design}"/>
                <Setter Property="Margin" TargetName="_statusText" Value="20,0,0,0"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="MetaContactBig">
        <Grid Margin="3,3,3,3" x:Name="_grid" ContextMenu="{DynamicResource ContactMenu}" VerticalAlignment="Center">
            <Grid.ToolTip>
                <ContentPresenter Content="{Binding}" ContentTemplate="{DynamicResource ContactToolTip}"/>
            </Grid.ToolTip>
            <Grid>
                <Grid VerticalAlignment="Top" x:Name="_resource" Margin="0,3,0,0" MaxHeight="90">
                    <Rectangle Margin="3,10,0,0" Fill="#33000000" StrokeThickness="0" RadiusX="3" RadiusY="3"/>
                    <Rectangle Panel.ZIndex="2" Width="10" HorizontalAlignment="Left"
                    Margin="11,0,0,2" Fill="{StaticResource right_shadow}" StrokeThickness="0"/>
                    <Border BorderThickness="1,1,1,1" CornerRadius="2,2,2,2" Margin="0,0,0,2" Padding="0,0,8,0"
                        Background="#FFe5e5e5" BorderBrush="{DynamicResource roster_image_border}">
                        <TextBlock Margin="0,5,0,5" VerticalAlignment="Center" Foreground="#FF000000"
                               Text="{Binding Path=Resource}" FontSize="10" TextTrimming="CharacterEllipsis">
                            <TextBlock.LayoutTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                    <SkewTransform AngleX="0" AngleY="0"/>
                                    <RotateTransform Angle="-90"/>
                                    <TranslateTransform X="0" Y="0"/>
                                </TransformGroup>
                            </TextBlock.LayoutTransform>
                        </TextBlock>
                    </Border>
                </Grid>
                <Grid Margin="15,0,0,0" x:Name="_item" MaxWidth="100" >
                    <Rectangle Width="16" Height="16" HorizontalAlignment="Left" VerticalAlignment="Top"
                        x:Name="_show" Panel.ZIndex="1" Margin="3,3,0,0"/>
                    <Rectangle Margin="1,1,1,0"
                          Fill="{DynamicResource contact_back_big_glow_design}"
                            VerticalAlignment="Top" Height="20" Panel.ZIndex="1" SnapsToDevicePixels="True"/>
                    <a:SystemDropShadowChrome Color="#3000" Margin="-4,-4,1,1"/>
                    <Border ClipToBounds="True" Padding="3,3,3,3"
                    BorderBrush="#FFAAAAAA" BorderThickness="1,1,1,1"
                    CornerRadius="3,3,3,3" SnapsToDevicePixels="True">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0.5,1.0" EndPoint="0.5,0.0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="#FF515151" Offset="0"/>
                                    <GradientStop Color="#FF141414" Offset="1"/>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Border.Background>
                        <StackPanel>
                            <Border Margin="5,5,5,0" x:Name="_imageBorder" Width="48" Height="48">
                                <Image Source="{Binding Path=Image}" x:Name="_image"
                                  ClipToBounds="True" Stretch="Uniform" IsEnabled="False">
                                    <!--
                                    <Image.OpacityMask>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0,0.5">
                                            <GradientStop Color="#DD000000" Offset="0"/>
                                            <GradientStop Color="#88FFFFFF" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Image.OpacityMask>
                                    -->
                                </Image>
                            </Border>
                            <Border Width="46" Height="24" Opacity="0.4">
                                <Border.OpacityMask>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="Black"/>
                                            <GradientStop Offset=".6" Color="Transparent"/>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.OpacityMask>
                                <Border.Background>
                                    <VisualBrush Visual="{Binding ElementName=_imageBorder}">
                                        <VisualBrush.Transform>
                                            <ScaleTransform ScaleX="1" ScaleY="-1" CenterX="23" CenterY="12" />
                                        </VisualBrush.Transform>
                                    </VisualBrush>
                                </Border.Background>
                            </Border>
                            <Grid Margin="0,-12,0,0" VerticalAlignment="Bottom">
                                <Rectangle Fill="Black" Opacity="0.15" RadiusX="3" RadiusY="3"/>
                                <TextBlock Margin="3,0,3,0" Text="{Binding Path=DisplayName}" Foreground="{StaticResource roster_name_text}" FontSize="11"
                                       TextAlignment="Center" TextTrimming="CharacterEllipsis"/>
                                <TextBlock Text="{Binding Path=XStatusText}"
                                               Foreground="{StaticResource roster_status_text}"
                                               Margin="4,12,4,0" FontSize="10" TextAlignment="Center" TextTrimming="CharacterEllipsis"/>
                            </Grid>
                        </StackPanel>
                    </Border>
                </Grid>
                <Border x:Name="_uptime" BorderThickness="1,1,1,1" CornerRadius="2,2,2,2"
                        Background="#FFe5e5e5" BorderBrush="{DynamicResource roster_image_border}"
                        HorizontalAlignment="Center" VerticalAlignment="Center" Margin="-2,0,0,3"
                        Padding="4,2,2,4">
                    <TextBlock Text="{Binding Path=LastOnlineTime}" Foreground="#FF000000"
                           FontSize="9"/>
                </Border>
            </Grid>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsImageTransparent}" Value="False">
                <Setter Property="BorderThickness" TargetName="_imageBorder" Value="1,1,1,1"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsAvailable}" Value="False">
                <Setter Property="Opacity" TargetName="_grid" Value="0.35"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=IsAvailable}" Value="True">
                <Setter Property="Visibility" TargetName="_uptime" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=LastOnlineTime}" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="_uptime" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=Resource}" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="_resource" Value="Collapsed"/>
                <Setter Property="Margin" TargetName="_item" Value="0,0,0,0"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=Show}" Value="dnd">
                <Setter Property="Fill" TargetName="_show" Value="{DynamicResource dnd_design}"/>
                <Setter Property="Visibility" TargetName="_show" Value="Visible"/>
                <Setter Property="Opacity" TargetName="_image" Value="0.4"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Show}" Value="away">
                <Setter Property="Fill" TargetName="_show" Value="{DynamicResource away_design}"/>
                <Setter Property="Visibility" TargetName="_show" Value="Visible"/>
                <Setter Property="Opacity" TargetName="_image" Value="0.4"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Show}" Value="xa">
                <Setter Property="Fill" TargetName="_show" Value="{DynamicResource xaway_design}"/>
                <Setter Property="Visibility" TargetName="_show" Value="Visible"/>
                <Setter Property="Opacity" TargetName="_image" Value="0.4"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Show}" Value="chat">
                <Setter Property="Fill" TargetName="_show" Value="{DynamicResource chat_design}"/>
                <Setter Property="Visibility" TargetName="_show" Value="Visible"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="FullContactCard">
        <Grid Margin="3,3,3,3" x:Name="_grid" ContextMenu="{DynamicResource ContactMenu}">
            <StackPanel HorizontalAlignment="Left">
                <Border Margin="1,1,1,-3" x:Name="_imageBorder" Width="32" Height="32"
	                                BorderBrush="{DynamicResource roster_image_border}"
	                                CornerRadius="3,3,3,3" SnapsToDevicePixels="True" ClipToBounds="True">
                    <Image Source="{Binding Path=Image}" x:Name="_image"
                                  ClipToBounds="True" Stretch="UniformToFill" IsEnabled="False">
                        <Image.OpacityMask>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0,0.5">
                                <GradientStop Color="#DD000000" Offset="0"/>
                                <GradientStop Color="#88FFFFFF" Offset="1"/>
                            </LinearGradientBrush>
                        </Image.OpacityMask>
                    </Image>
                </Border>
                <Border Width="32" Height="16" Opacity="0.5" Margin="0,2,0,-3">
                    <Border.OpacityMask>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStop Offset="0" Color="Black"/>
                                <GradientStop Offset=".6" Color="Transparent"/>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Border.OpacityMask>
                    <Border.Background>
                        <VisualBrush Visual="{Binding ElementName=_imageBorder}">
                            <VisualBrush.Transform>
                                <ScaleTransform ScaleX="1" ScaleY="-1" CenterX="16" CenterY="8" />
                            </VisualBrush.Transform>
                        </VisualBrush>
                    </Border.Background>
                </Border>
            </StackPanel>
            <StackPanel Margin="45,0,0,0">
                <TextBlock Margin="3,0,3,0" Text="{Binding Path=DisplayName}" Foreground="{StaticResource roster_name_text}" FontSize="11"
                                       TextAlignment="Left" TextTrimming="CharacterEllipsis"/>
                <Grid>
                    <Rectangle Width="16" Height="16" HorizontalAlignment="Left" VerticalAlignment="Center"
                                    x:Name="_show" Panel.ZIndex="1" Margin="0,0,4,0"/>
                    <StackPanel x:Name="_statusText" Margin="4,0,4,0" >
                        <TextBlock Text="{Binding Path=XStatusText}"
                                           Foreground="{StaticResource roster_status_text}"
                                           FontSize="10" TextAlignment="Left" TextWrapping="Wrap" MaxHeight="30" TextTrimming="CharacterEllipsis"/>
                        <TextBlock Text="{Binding Path=Resource}"
                                           Foreground="{StaticResource roster_status_text}"
                                           FontSize="10" TextAlignment="Left" TextWrapping="Wrap" MaxHeight="30" TextTrimming="CharacterEllipsis"/>
                    </StackPanel>
                </Grid>
            </StackPanel>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsAvailable}" Value="False">
                <Setter Property="Opacity" TargetName="_grid" Value="0.35"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=IsImageTransparent}" Value="False">
                <Setter Property="BorderThickness" TargetName="_imageBorder" Value="1,1,1,1"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=Show}" Value="dnd">
                <Setter Property="Fill" TargetName="_show" Value="{DynamicResource dnd_design}"/>
                <Setter Property="Margin" TargetName="_statusText" Value="20,0,0,0"/>
                <Setter Property="Opacity" TargetName="_image" Value="0.4"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Show}" Value="away">
                <Setter Property="Fill" TargetName="_show" Value="{DynamicResource away_design}"/>
                <Setter Property="Margin" TargetName="_statusText" Value="20,0,0,0"/>
                <Setter Property="Opacity" TargetName="_image" Value="0.4"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Show}" Value="xa">
                <Setter Property="Fill" TargetName="_show" Value="{DynamicResource xaway_design}"/>
                <Setter Property="Margin" TargetName="_statusText" Value="20,0,0,0"/>
                <Setter Property="Opacity" TargetName="_image" Value="0.4"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Show}" Value="chat">
                <Setter Property="Fill" TargetName="_show" Value="{DynamicResource chat_design}"/>
                <Setter Property="Margin" TargetName="_statusText" Value="20,0,0,0"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="ContactCard">
        <Grid Margin="3,3,3,3" x:Name="_grid">
            <StackPanel HorizontalAlignment="Left">
                <Border Margin="1,1,1,-3" x:Name="_imageBorder" Width="32" Height="32"
	                                BorderBrush="{DynamicResource roster_image_border}"
	                                CornerRadius="3,3,3,3" ClipToBounds="True">
                    <Image Source="{Binding Path=Image}" x:Name="_image"
                                  ClipToBounds="True" Stretch="UniformToFill" IsEnabled="False">
                        <Image.OpacityMask>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0,0.5">
                                <GradientStop Color="#DD000000" Offset="0"/>
                                <GradientStop Color="#88FFFFFF" Offset="1"/>
                            </LinearGradientBrush>
                        </Image.OpacityMask>
                    </Image>
                </Border>
                <Border Width="32" Height="16" Opacity="0.5" Margin="0,2,0,-3">
                    <Border.OpacityMask>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStop Offset="0" Color="Black"/>
                                <GradientStop Offset=".6" Color="Transparent"/>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Border.OpacityMask>
                    <Border.Background>
                        <VisualBrush Visual="{Binding ElementName=_imageBorder}">
                            <VisualBrush.Transform>
                                <ScaleTransform ScaleX="1" ScaleY="-1" CenterX="16" CenterY="8" />
                            </VisualBrush.Transform>
                        </VisualBrush>
                    </Border.Background>
                </Border>
            </StackPanel>
            <StackPanel Margin="35,0,0,0">
                <TextBlock Margin="3,0,3,0" Text="{Binding Path=DisplayName}" Foreground="{StaticResource roster_name_text}" FontSize="11"
                                       TextAlignment="Left" TextTrimming="CharacterEllipsis"/>
                <TextBox Text="{Binding Path=Jid, Mode=OneWay}" FontSize="11" 
                    		Style="{DynamicResource TransparentTextBoxStyle}"
                            Foreground="{DynamicResource DefaultSelectedBorderBrush}" IsReadOnly="True" Margin="0,0,3,0"/>
            </StackPanel>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsImageTransparent}" Value="False">
                <Setter Property="BorderThickness" TargetName="_imageBorder" Value="1,1,1,1"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>


</ResourceDictionary>