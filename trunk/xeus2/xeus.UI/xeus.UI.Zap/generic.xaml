<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
          >

    <!--
				  xmlns:itb="clr-namespace:Microsoft.Samples.KMoore.WPFSamples.InfoTextBox"
          xmlns:nud="clr-namespace:Microsoft.Samples.KMoore.WPFSamples.NumericUpDownControl"  
          xmlns:MonthCalendar="clr-namespace:Microsoft.Samples.KMoore.WPFSamples.DateControls"
    
    -->
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="Zap.Generic.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <!--
	InfoTextBox
	-->

  <Storyboard x:Key="enterGotFocus" TargetName="Message" TargetProperty="Opacity">
    <DoubleAnimation Duration="0:0:0.3" To=".33"/>
  </Storyboard>
  <Storyboard x:Key="exitGotFocus" TargetName="Message" TargetProperty="Opacity">
    <DoubleAnimation Duration="0:0:0.4"/>
  </Storyboard>

  <Storyboard x:Key="enterHasText" TargetProperty="Opacity" TargetName="Message">
    <DoubleAnimation Duration="0:0:0.3" From=".33" To="0"/>
  </Storyboard>
  <Storyboard x:Key="exitHasText" TargetName="Message" TargetProperty="Opacity">
    <DoubleAnimation Duration="0:0:0.4"/>
  </Storyboard>
<!--
  <Style x:Key="{x:Type itb:InfoTextBox}" TargetType="{x:Type itb:InfoTextBox}" BasedOn="{DynamicResource {x:Type TextBox}}">
    <Setter Property="Margin" Value="1"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type itb:InfoTextBox}">
          <Border Name="Bd"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
              <Decorator x:Name="PART_ContentHost" VerticalAlignment="Center" Margin="3"/>
              <TextBlock Text="{TemplateBinding TextBoxInfo}" x:Name="Message"
								Foreground="Navy" IsHitTestVisible="False" 
								FontStyle="Italic" Opacity="0.67" HorizontalAlignment="Left" VerticalAlignment="Center"
								Margin="6 0 6 0"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>


            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="HasText" Value="False"/>
                <Condition Property="IsFocused" Value="True"/>

              </MultiTrigger.Conditions>
              <MultiTrigger.EnterActions>
                <BeginStoryboard Storyboard="{DynamicResource enterGotFocus}"/>
              </MultiTrigger.EnterActions>
              <MultiTrigger.ExitActions>
                <BeginStoryboard Storyboard="{DynamicResource exitGotFocus}"/>
              </MultiTrigger.ExitActions>
            </MultiTrigger>

            <Trigger Property="HasText" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{DynamicResource enterHasText}"/>
              </Trigger.EnterActions>

              <Trigger.ExitActions>
                <BeginStoryboard Storyboard="{DynamicResource exitHasText}"/>
              </Trigger.ExitActions>
            </Trigger>

            <Trigger Property="IsEnabled"
								 Value="false">
              <Setter TargetName="Bd"
									Property="Background"
									Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
              <Setter Property="Foreground"
									Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
            <Trigger Property="Width"
								 Value="Auto">
              <Setter Property="MinWidth"
									Value="100"/>
            </Trigger>
            <Trigger Property="Height"
								 Value="Auto">
              <Setter Property="MinHeight"
									Value="20"/>
            </Trigger>

          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
-->
  <!--
	NumericUpDown
	-->
<!--
  <Style TargetType="{x:Type nud:NumericUpDown}">
    <Setter Property="HorizontalAlignment" Value="Center"/>
    <Setter Property="VerticalAlignment" Value="Center"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type nud:NumericUpDown}">
          <Grid Margin="3">
            <Grid.RowDefinitions>
              <RowDefinition/>
              <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition/>
              <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Border BorderThickness="1" BorderBrush="Gray" Margin="2" Grid.RowSpan="2" VerticalAlignment="Center" HorizontalAlignment="Stretch">
              <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value}"  Width="60" TextAlignment="Right" Padding="5"/>
            </Border>
            <RepeatButton Command="{x:Static nud:NumericUpDown.IncreaseCommand}"  Grid.Column="1" Grid.Row="0">Up</RepeatButton>
            <RepeatButton Command="{x:Static nud:NumericUpDown.DecreaseCommand}"  Grid.Column="1" Grid.Row="1">Down</RepeatButton>

          </Grid>

        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>-->

</ResourceDictionary>
