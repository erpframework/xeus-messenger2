<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:xeus2_xeus_Core="clr-namespace:xeus2.xeus.Core"
    xmlns:rostercmd="clr-namespace:xeus2.xeus.Commands"    
    x:Class="xeus2.xeus.UI.xeus.UI.Controls.RosterSizeSelection"
    ClipToBounds="True" RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="True"
    >

    <UserControl.Resources>
        <Style x:Key="ButtonStyleContainer" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#FF000000"/>
            <Setter Property="MinHeight" Value="22"/>
            <Setter Property="Foreground" Value="#FFFFFFFF"/>
            <Setter Property="BorderBrush" Value="#FFDEDEDE"/>
            <Setter Property="BorderThickness" Value="1,1,1,1"/>
            <Style.BasedOn>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Border>
                                                <Rectangle SnapsToDevicePixels="True" Stroke="#FF000000" StrokeDashArray="1 2" StrokeThickness="1" Margin="4,4,4,4"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="BorderBrush">
                        <Setter.Value>
                            <SolidColorBrush/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderThickness" Value="3,3,3,3"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="0,0,1,1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border 
    								x:Name="_border"
    								BorderThickness="1,1,1,1" 
    								CornerRadius="3,3,3,3" RenderTransformOrigin="0.5,0.5" Padding="5,5,5,5" >
                                    <Border.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform X="0" Y="0"/>
                                        </TransformGroup>
                                    </Border.RenderTransform>
                                    <ContentPresenter x:Name="contentPresenter" Width="90.7733333333333" Height="113.86"/>
                                </Border>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" TargetName="_border" Value="0.5"/>
                                        <Setter Property="Opacity" TargetName="contentPresenter" Value="0.5"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="_border" Value="#19000000"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="RenderTransform" TargetName="_border">
                                            <Setter.Value>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
                                                    <SkewTransform AngleX="0" AngleY="0"/>
                                                    <RotateTransform Angle="0"/>
                                                    <TranslateTransform X="0" Y="0"/>
                                                </TransformGroup>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Style.BasedOn>
        </Style>

    </UserControl.Resources>

    <!--
    <UserControl.RenderTransform>
        <TransformGroup>
            <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
            <SkewTransform AngleX="0" AngleY="0"/>
            <RotateTransform Angle="0"/>
            <TranslateTransform X="0" Y="0"/>
        </TransformGroup>
    </UserControl.RenderTransform>
    -->

    <Grid>
        <Rectangle Opacity="0.5" Fill="{DynamicResource chat_back_design}" Stroke="{DynamicResource DefaultBorderBrush}" RadiusX="3" RadiusY="3"/>
        <StackPanel Orientation="Horizontal">
            <Button Style="{DynamicResource ButtonStyleContainer}" Click="Button_Click"
                    Command="rostercmd:RosterCommands.ViewSmall">
                <ContentPresenter x:Name="_small" ContentTemplate="{DynamicResource MetaContactSmall}"/>
            </Button>
            <!--
            <Button Style="{DynamicResource ButtonStyleContainer}" Click="Button_Click"
                    Command="rostercmd:RosterCommands.ViewMedium">
                <ContentPresenter x:Name="_medium" ContentTemplate="{DynamicResource MetaContactMedium}"/>
            </Button>
            -->
            <Button Style="{DynamicResource ButtonStyleContainer}" Click="Button_Click"
                    Command="rostercmd:RosterCommands.ViewBig">
                <ContentPresenter x:Name="_big" ContentTemplate="{DynamicResource MetaContactBig}"/>
            </Button>
        </StackPanel>
    </Grid>
</UserControl>
