<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic">
	<!-- Resource dictionary entries should be defined here. -->

	<Style x:Key="XDataLabel" TargetType="{x:Type TextBlock}">
		<Setter Property="TextWrapping" Value="Wrap"/>
		<Setter Property="MinWidth" Value="150"/>
		<Setter Property="MaxWidth" Value="150"/>
	</Style>

	<Style x:Key="XDataFixed" TargetType="{x:Type TextBlock}">
		<Setter Property="TextWrapping" Value="Wrap"/>
	</Style>
	
	<Style x:Key="XDataTextBox" TargetType="{x:Type TextBox}">
		<Setter Property="MinWidth" Value="150"/>
		<Setter Property="MaxWidth" Value="250"/>
	</Style>

	<Style x:Key="XDataCheckBox" TargetType="{x:Type CheckBox}">
		<Setter Property="MinWidth" Value="150"/>
	</Style>

	<Style x:Key="XDataListMulti" TargetType="{x:Type StackPanel}"/>

	<Style x:Key="XDataListSingle" TargetType="{x:Type ComboBox}">
		<Setter Property="MinWidth" Value="150"/>
		<Setter Property="MaxWidth" Value="250"/>
	</Style>

	<Style x:Key="XDataSecret" TargetType="{x:Type PasswordBox}">
		<Setter Property="MinWidth" Value="150"/>
		<Setter Property="MaxWidth" Value="250"/>
	</Style>

	<ControlTemplate x:Key="TreeViewControlTemplate" TargetType="{x:Type TreeView}">
		<Border>
			<ScrollViewer Focusable="False" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" CanContentScroll="False" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
				<ItemsPresenter/>
			</ScrollViewer>
		</Border>
	</ControlTemplate>

	<SolidColorBrush x:Key="DefaultBorderBrush" Color="#FFA1A1A1"/>

	<Style TargetType="{x:Type TreeView}">
		<Setter Property="OverridesDefaultStyle" Value="False"/>
		<Setter Property="Background" Value="{x:Null}"/>
	</Style>

	<SolidColorBrush x:Key="DefaultTextBrush" Color="#FF545454"/>

	<Style x:Key="ProgressBarStyle" TargetType="{x:Type ProgressBar}">
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
		<Setter Property="BorderBrush">
			<Setter.Value>
				<SolidColorBrush/>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderThickness" Value="1,1,1,1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ProgressBar}">
					<Microsoft_Windows_Themes:ClassicBorderDecorator Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderStyle="ThinPressed" BorderThickness="{TemplateBinding BorderThickness}">
						<DockPanel Margin="0,0,2,2" x:Name="PART_Track" LastChildFill="False">
							<Rectangle x:Name="PART_Indicator">
								<Rectangle.Fill>
									<MultiBinding UpdateSourceTrigger="Default">
										<MultiBinding.Converter>
											<Microsoft_Windows_Themes:ProgressBarBrushConverter/>
										</MultiBinding.Converter>
										<Binding Path="Foreground" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="IsIndeterminate" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="ActualWidth" ElementName="PART_Indicator"/>
										<Binding Path="ActualHeight" ElementName="PART_Indicator"/>
										<Binding Path="ActualWidth" ElementName="PART_Track"/>
									</MultiBinding>
								</Rectangle.Fill>
							</Rectangle>
						</DockPanel>
					</Microsoft_Windows_Themes:ClassicBorderDecorator>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="MinHeight" Value="25"/>
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Vertical">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ProgressBar}">
							<Microsoft_Windows_Themes:ClassicBorderDecorator Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderStyle="ThinPressed" BorderThickness="{TemplateBinding BorderThickness}">
								<DockPanel Margin="0,0,2,2" x:Name="PART_Track" LastChildFill="False">
									<Decorator x:Name="PART_Indicator" DockPanel.Dock="Bottom">
										<Rectangle>
											<Rectangle.Fill>
												<MultiBinding UpdateSourceTrigger="Default">
													<MultiBinding.Converter>
														<Microsoft_Windows_Themes:ProgressBarBrushConverter/>
													</MultiBinding.Converter>
													<Binding Path="Foreground" RelativeSource="{RelativeSource TemplatedParent}"/>
													<Binding Path="IsIndeterminate" RelativeSource="{RelativeSource TemplatedParent}"/>
													<Binding Path="ActualHeight" ElementName="PART_Indicator"/>
													<Binding Path="ActualWidth" ElementName="PART_Indicator"/>
													<Binding Path="ActualHeight" ElementName="PART_Track"/>
												</MultiBinding>
											</Rectangle.Fill>
											<Rectangle.LayoutTransform>
												<RotateTransform Angle="-90"/>
											</Rectangle.LayoutTransform>
										</Rectangle>
									</Decorator>
								</DockPanel>
							</Microsoft_Windows_Themes:ClassicBorderDecorator>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="ImageButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Template" Value="{DynamicResource ImageButtonControlTemplate}"/>
		<Setter Property="SnapsToDevicePixels" Value="False"/>
		<Setter Property="Margin" Value="2,2,2,2"/>
		<Setter Property="AllowDrop" Value="False"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="IsTabStop" Value="False"/>
	</Style>

	<ControlTemplate x:Key="ImageButtonControlTemplate" TargetType="{x:Type Button}">
		<Border x:Name="border" Background="{TemplateBinding Background}" />
			<!--
			<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" RecognizesAccessKey="True"/>
			-->
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="BitmapEffect" TargetName="border">
					<Setter.Value>
						<OuterGlowBitmapEffect GlowColor="#FFFFFFFF" GlowSize="3"/>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Margin" TargetName="border" Value="1,1,0,0"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style x:Key="FrameBorderStyle" TargetType="{x:Type Border}">
		<Setter Property="BorderBrush" Value="{DynamicResource DefaultBorderBrush}"/>
		<Setter Property="BorderThickness" Value="1,1,1,1"/>
		<Setter Property="CornerRadius" Value="8,8,8,8"/>
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="#FFE5E5E5" Offset="0.074"/>
					<GradientStop Color="#FFFFFFFF" Offset="1"/>
					<GradientStop Color="#FFFCFCFC" Offset="0"/>
					<GradientStop Color="#FFFDFDFD" Offset="0.926"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>